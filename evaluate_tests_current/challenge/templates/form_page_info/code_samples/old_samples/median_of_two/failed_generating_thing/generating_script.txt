#1includes#1
#1#include <stdlib.h>
#include <stdio.h>#1

#2compute decl#2
#2@n1  compute(@n2 );#2

#3default compute decl#3
#3
$1compute decl$1
$2void$2
$3int A[], int length_A, int B[], int length_B$3#3


#4first length check#4
#4@n3 if(@n1  > @n2 ) {
@n3   //print statement
@n3   return;
@n3 }#4

#5start inits#5
#5@n3 int @n1  = 0;
@n3 int @n2  = 0;#5

#6iterations init#6
#6@n3 int @n1  = @n2 ;#6

#7big loop#7
#7@n3 for(int i = 0; i < @n1 ; i++) {
@n2
@n3}#7

#8if depth one#8
#8@n3 if(@n1  == 1) {
@n2
@n3 } else if(@n1  == 2) {
@n2
@n3 }#8

#9first if depth two#9
#9@n3 if(@n1  == 1) {
@n3   //print statement

@n3 } else if(@n1  % 2 == 1) {
@n3   //print statement

@n3 } else {
@n3   //print statement
@n3 }
@n3 return;#9

#10second if depth two#10
#10@n3 if(@n1  == 2) {
@n3   //print statement

@n3 } else if(@n1  % 2 == 0) {
@n3   //print statement

@n3 } else{
@n3   //print statement

@n3 }
@n3 return;#9

#11post if depth one#11
#11@n3 int @n1  = (@n2  - 1) / 2 + @n4 ;
@n3 int @n5  = (@n6  - 1) / 2 + @n7 ;

@n3 if(@n8 [@n1 ] <= @n9 [@n5 ]) {
@n3   //print statement
@n3   @n4  += @n1 ;

@n3 } else {
@n3   //print statement
@n3   @n7  += @n1 ;
@n3 }

@n3 @n2  -= @n1 ;
@n3 @n6  -= @n1 ;#11

#12compute call#12
#12@n1  compute(@n2 ) {
@n3
}#12

#13default compute call#13
#13
$1compute call$1
$2void$2
$3int A[], int length_A, int B[], int length_B$3
$4@n1$4#13


#14factor 1#14
#14
$1includes$1

$1default compute decl$1

$1default compute call$1
$2
$3first length check$3
$4length_A$4
$5length_B$4


